                <h:outputLabel for="ausweisdruck" value="Ausweisdruck in PDF-Datei" />
                <p:selectBooleanCheckbox id="ausweisdruck" value="#{applicationControlBean.isPDF}">
                    <p:ajax event="change" global="false" />
                </p:selectBooleanCheckbox>



                    <p:ajax event="itemSelect" listener="#{applicationControlBean.onItemSelectedListener}"/>




                <!--
                <h:outputLink value="http://closekiosk">ENDE</h:outputLink>
                
                <p:outputLabel for="barcodeview" value="#{msg['control.barcodeoverview']}:" />
                <p:button id="barcodeview" outcome="mgllist" type="button" value="#{msg['control.barcodeoverview']}" class="secondary"/>
                
                <p:outputLabel for="print" value="Druckdialog:" />
                <p:button id="print" outcome="print" type="button" value="Drucken" class="secondary"/>
                -->


if (!ApplicationControlBean.getStaticKartendrucker().isEmpty()) {
                        try {
                            //printThePDF(pdfFile, "ZEBRA CARD PRINTER ZXP11");
                            printThePDF(pdfFile, ApplicationControlBean.getStaticKartendrucker());
                        } catch (Exception ex) {
                            Logger.getLogger(MglView.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

    static public void printThePDF(String file, String printer) throws Exception {

        PDDocument document = PDDocument.load(new File(file));

        PrintService myPrintService = findPrintService(printer);

        PrinterJob job = PrinterJob.getPrinterJob();

        job.setPageable(new PDFPageable(document));

        job.setPrintService(myPrintService);
        job.print();

    }

    /**
     *
     * @param jasperReport
     */
    public void exportReport(JasperReport jasperReport) {
        JasperPrint jasperPrint;

        HashMap<String, Object> parameter = new HashMap<>();
        parameter.put("aParameter", "Hallo Welt");

        try {
            if (jasperReport != null) {
                em.getTransaction().begin();
                java.sql.Connection connection = em.unwrap(java.sql.Connection.class);

                LOGGER.fine("jasperReport ist ungleich null");

                jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, connection);
                /*
                try {
                    JasperPrintManager.printReport(jasperPrint, true);
                } catch (JRException err) {
                    LOGGER.info(err.getMessage());
                }
                 */
                JasperExportManager.exportReportToPdfFile(jasperPrint, getTempDir().resolve("Example.pdf").toString());

                em.getTransaction().commit();
            } else {
                LOGGER.fine("jasperReport ist gleich null");
            }
        } catch (JRException ex) {
            Logger.getLogger(MglView.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*
        try {
            printThePDF("/Users/ulrich/Desktop/Example.pdf", "ZEBRA CARD PRINTER ZXP11");
            //printThePDF("/Users/ulrich/Desktop/Example.pdf", "swdrucker");
        } catch (Exception ex) {
            Logger.getLogger(MglView.class.getName()).log(Level.SEVERE, null, ex);
        }
         */
    }

                    <p:ajax event="filter" update="faultTable, :logForm:count" />

filteredValue="#{errorHandler.filteredFileContent}"

 filterBy="#{line}" headerText="LOG-Text" filterMatchMode="contains" filterStyle="width: 450px;"

        <h:form>  
            <p:commandButton value="Download" ajax="false" onclick="PrimeFaces.monitorDownload(start, stop);" icon="pi pi-arrow-down">
                <p:fileDownload value="#{documentationView.datei}" />
            </p:commandButton> 
        </h:form>

    <ui:define name="title">
        Dokumentation
    </ui:define>

    <ui:define name="head">
        
    </ui:define>

    <ui:define name="description">
        test #{documentationView.fileName}
    </ui:define>


                    <p:commandButton id="dynaButton" type="button" icon="pi pi-bars" />

                    <p:tieredMenu  overlay="true" trigger="dynaButton" my="right top" at="right bottom" style="width:200px">
                        <p:menuitem value="Über IDControl" outcome="info" icon="pi pi-info"/>
                        <p:separator />
                        <p:menuitem value="Einstellungen" outcome="index" icon="pi pi-cog"/>
                        <p:separator />
                        <p:menuitem process="@this" value="Scanlog zurücksetzten" action="#{applicationControlBean.resetScanLog}" icon="pi pi-users"/>
                        <p:menuitem process="@this" value="Anwesenheitsliste" action="#{applicationControlBean.printActionAL}" icon="pi pi-users"/>
                        <p:submenu label="Anleitungen" icon="pi pi-folder-open">
                            <p:menuitem outcome="documentation"  value="ZEBRA ZXP1" icon="pi pi-file"/>
                        </p:submenu> 
                        <p:submenu label="Drucken" icon="pi pi-folder-open">
                            <p:menuitem value="Ausweisrückseite" outcome="idcardback" icon="pi pi-print"/>
                        </p:submenu> 
                        <p:separator />
                        <p:menuitem value="Beenden" action="#{menuView.logout}" icon="pi pi-power-off"/>            
                    </p:tieredMenu>